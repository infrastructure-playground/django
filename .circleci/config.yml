version: 2
jobs:
  login_test:
    # parallelism: 4  # To run a jobâ€™s steps in parallel, set the parallelism key to a value greater than 1.
    docker:
      - image: infrastructureplayground/django:latest  # the first image is the environment where steps will be executed
        name: django
        environment:
          DOCKERIZED: true
      - image: unnotech/postgres-replication:10.4
        name: postgres
    steps:
      - checkout  # to pull the source code from repository
      - setup_remote_docker:  # needed to connect container ports
          docker_layer_caching: true
      - run: pip install -r requirements.txt
      - run: python manage.py makemigrations
      - run: python manage.py migrate
      - run: python manage.py test authentication.tests.RegistrationTest
      - run: python manage.py test authentication.tests.LoginTest
  inventory_test:
    # parallelism: 4
    docker:
      - image: infrastructureplayground/django:latest
        name: django
        environment:
          DOCKERIZED: true
      - image: unnotech/postgres-replication:10.4
        name: postgres
    steps:
      - checkout
      - setup_remote_docker:  # needed to connect container ports
          docker_layer_caching: true
      - run: pip install -r requirements.txt
      - run: python manage.py makemigrations
      - run: python manage.py migrate
      - run: python manage.py test inventory.tests.BooksTest
  deploy_to_staging:
    machine: true
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build --cache-from=infrastructureplayground/django:latest -t infrastructureplayground/django:latest .
      - run: docker push infrastructureplayground/django:latest
  deploy_to_production:
    machine: true
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build --cache-from=infrastructureplayground/django:latest -t infrastructureplayground/django:production .
      - run: docker push infrastructureplayground/django:production


workflows:
  version: 2
  pipeline:
    jobs:
      - login_test
      - inventory_test
      - deploy_to_staging:
          requires:
            - login_test
            - inventory_test
          filters:
            branches:
              only:
                - master
      - production_hold:
          type: approval
          filters:
            branches:
              only:
                - production
      - deploy_to_production:
          requires:
            - production_hold

# Helpful Resource:
# - https://circleci.com/docs/2.0/building-docker-images/
# - https://circleci.com/docs/2.0/parallelism-faster-jobs/
# - https://circleci.com/docs/2.0/configuration-reference/
# - https://circleci.com/docs/2.0/workflows/
# - https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables
# - https://github.com/magento-engcom/community-portal/wiki/Circle-CI-Setup-and-Workflow
# - https://discuss.circleci.com/t/workflows-pull-request-filter/14396/10